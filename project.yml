apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: postgresdb
  POSTGRES_USER: postgresadmin
  POSTGRES_PASSWORD: admin123
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-volume
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:10.4
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
   - port: 5432
  selector:
   app: postgres


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-back-end-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-backend
  template:
    metadata:
      labels:
        app: test-backend
    spec:
      initContainers:
        - name: init-backend
          image: marechalocelot/init-backend:latest
          env:
          - name: DATABASE_URL
            value: "postgres://postgresadmin:admin123@postgres.default.svc.cluster.local:5432/diesel_demo"
      containers:
        - name: test-backend-container
          image: marechalocelot/test-backend:latest
          imagePullPolicy: Always
          env:
          - name: DATABASE_URL
            value: "postgres://postgresadmin:admin123@postgres.default.svc.cluster.local:5432/diesel_demo"
          - name: ROCKET_ADDRESS
            value: "0.0.0.0"
          - name: ROCKET_PORT
            value: "80"
---
apiVersion: v1
kind: Service
metadata:
  name: test-backend-service
spec:
  ports:
    - name: http
      targetPort: 80
      port: 80
  type: ClusterIP
  selector:
    app: test-backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-front-end-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front-end
  template:
    metadata:
      labels:
        app: front-end
    spec:

      containers:
        - name: test-frontend-container
          image: marechalocelot/basic-front-end:latest
          imagePullPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: test-frontend-service
spec:
  ports:
    - name: http
      targetPort: 80
      port: 80
  type: ClusterIP
  selector:
    app: front-end
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: project-ingress
  
spec:
  rules:
    - host: back-end.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: test-backend-service
                port:
                  number: 80
    - host: front-end.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: test-frontend-service
                port:
                  number: 80
